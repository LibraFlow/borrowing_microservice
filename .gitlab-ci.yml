stages:
- deploy-kubernetes

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_IMAGE: ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/borrowing-service/borrowing-service:${CI_COMMIT_SHA}
  # Add NVD API key for better dependency check results
  NVD_API_KEY: ${NVD_API_KEY}
  KUBE_NAMESPACE: borrowing-service
  KUBE_CLUSTER: ${GCP_PROJECT_ID}-gke

deploy-kubernetes:
  stage: deploy-kubernetes
  image: google/cloud-sdk:latest
  variables:
    DOCKER_HOST: npipe:////./pipe/docker_engine
  script:
    - if (!(Test-Path "//./pipe/docker_engine")) { throw "Docker Desktop is not running. Please start Docker Desktop and try again." }
    - $bytes = [System.Text.Encoding]::UTF8.GetBytes($GCP_K8S_SERVICE_ACCOUNT_KEY)
    - $encodedText = [Convert]::ToBase64String($bytes)
    - Set-Content -Path "$env:TEMP\k8s-key.json" -Value $GCP_K8S_SERVICE_ACCOUNT_KEY
    - gcloud auth activate-service-account --key-file="$env:TEMP\k8s-key.json"
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev
    - docker build -t $DOCKER_IMAGE ./borrowing_service
    - docker push $DOCKER_IMAGE
    - gcloud container clusters get-credentials $KUBE_CLUSTER --region $GCP_REGION --project $GCP_PROJECT_ID
    - kubectl create namespace $KUBE_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
    # Create base64 encoded secrets
    - $datasourceUrl = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("jdbc:postgresql://${GCP_PROJECT_ID}:europe-west4:borrowing-service-db/db5"))
    - $datasourceUsername = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("user5"))
    - $datasourcePassword = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("password5"))
    # Apply Kubernetes configurations
    - (Get-Content ./borrowing_service/kubernetes/secrets.yaml) -replace '\${BASE64_ENCODED_DATASOURCE_URL}', $datasourceUrl -replace '\${BASE64_ENCODED_DATASOURCE_USERNAME}', $datasourceUsername -replace '\${BASE64_ENCODED_DATASOURCE_PASSWORD}', $datasourcePassword | kubectl apply -f - -n $KUBE_NAMESPACE
    # Apply service account and resources
    - kubectl apply -f ./borrowing_service/kubernetes/service-account.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f ./borrowing_service/kubernetes/cloudsql-proxy.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f ./borrowing_service/kubernetes/resource-quota.yaml -n $KUBE_NAMESPACE
    # Replace variables in deployment.yaml and apply
    - (Get-Content ./borrowing_service/kubernetes/deployment.yaml) -replace '\${GCP_REGION}', $GCP_REGION -replace '\${GCP_PROJECT_ID}', $GCP_PROJECT_ID -replace '\${CI_COMMIT_SHA}', $CI_COMMIT_SHA | kubectl apply -f - -n $KUBE_NAMESPACE
    - kubectl apply -f ./borrowing_service/kubernetes/service.yaml -n $KUBE_NAMESPACE
  only:
    - main